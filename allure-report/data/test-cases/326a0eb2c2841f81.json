{"uid":"326a0eb2c2841f81","name":"test_register_without_mandate_fields","fullName":"Tests.test_register.TestRegister#test_register_without_mandate_fields","historyId":"cd518565acd93bc2891c49a6914f185c","time":{"start":1753894245226,"stop":1753894247898,"duration":2672},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='text-danger'][text()='First Name must be between 1 and 32 characters!']\"}\n  (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7922ce415+77285]\n\tGetHandleVerifier [0x0x7ff7922ce470+77376]\n\t(No symbol) [0x0x7ff792099a6a]\n\t(No symbol) [0x0x7ff7920f0406]\n\t(No symbol) [0x0x7ff7920f06bc]\n\t(No symbol) [0x0x7ff792143ac7]\n\t(No symbol) [0x0x7ff79211864f]\n\t(No symbol) [0x0x7ff79214087f]\n\t(No symbol) [0x0x7ff7921183e3]\n\t(No symbol) [0x0x7ff7920e1521]\n\t(No symbol) [0x0x7ff7920e22b3]\n\tGetHandleVerifier [0x0x7ff7925b1efd+3107021]\n\tGetHandleVerifier [0x0x7ff7925ac29d+3083373]\n\tGetHandleVerifier [0x0x7ff7925cbedd+3213485]\n\tGetHandleVerifier [0x0x7ff7922e884e+184862]\n\tGetHandleVerifier [0x0x7ff7922f055f+216879]\n\tGetHandleVerifier [0x0x7ff7922d7084+113236]\n\tGetHandleVerifier [0x0x7ff7922d7239+113673]\n\tGetHandleVerifier [0x0x7ff7922be298+11368]\n\tBaseThreadInitThunk [0x0x7ffdf297e8d7+23]\n\tRtlUserThreadStart [0x0x7ffdf3a5c34c+44]","statusTrace":"self = <Tests.test_register.TestRegister object at 0x0000024D548D2E90>\n\n    def test_register_without_mandate_fields(self):\n        home_page = HomePage(self.driver)\n        home_page.click_on_my_account_dropdown()\n        register_page = home_page.click_on_register_option()\n        register_page.enter_all_fields_to_register(\"\", \"\", \"\", \"\", \"\", \"\")\n>       assert register_page.verify_warning_message_for_first_name_field(\"First Name must be between 1 and 32 characters!\")\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTests\\test_register.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\RegisterPage.py:63: in verify_warning_message_for_first_name_field\n    displayed_warning_message = self.warning_message_for_first_name_field()\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\RegisterPage.py:59: in warning_message_for_first_name_field\n    return self.retrieve_element_text(\"warning_message_text_for_first_name_field_XPATH\",self.warning_message_text_for_first_name_field_XPATH)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\BasePage.py:10: in retrieve_element_text\n    element = self.get_element(locator_name,locator_value)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\BasePage.py:32: in get_element\n    element = self.driver.find_element(By.XPATH,locator_value)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024D5496E520>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff7922be298+11368]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffdf297e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffdf3a5c34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='text-danger'][text()='First Name must be between 1 and 32 characters!']\"}\nE         (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7922ce415+77285]\nE       \tGetHandleVerifier [0x0x7ff7922ce470+77376]\nE       \t(No symbol) [0x0x7ff792099a6a]\nE       \t(No symbol) [0x0x7ff7920f0406]\nE       \t(No symbol) [0x0x7ff7920f06bc]\nE       \t(No symbol) [0x0x7ff792143ac7]\nE       \t(No symbol) [0x0x7ff79211864f]\nE       \t(No symbol) [0x0x7ff79214087f]\nE       \t(No symbol) [0x0x7ff7921183e3]\nE       \t(No symbol) [0x0x7ff7920e1521]\nE       \t(No symbol) [0x0x7ff7920e22b3]\nE       \tGetHandleVerifier [0x0x7ff7925b1efd+3107021]\nE       \tGetHandleVerifier [0x0x7ff7925ac29d+3083373]\nE       \tGetHandleVerifier [0x0x7ff7925cbedd+3213485]\nE       \tGetHandleVerifier [0x0x7ff7922e884e+184862]\nE       \tGetHandleVerifier [0x0x7ff7922f055f+216879]\nE       \tGetHandleVerifier [0x0x7ff7922d7084+113236]\nE       \tGetHandleVerifier [0x0x7ff7922d7239+113673]\nE       \tGetHandleVerifier [0x0x7ff7922be298+11368]\nE       \tBaseThreadInitThunk [0x0x7ffdf297e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffdf3a5c34c+44]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1753894242811,"stop":1753894245225,"duration":2414},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"setup_and_teardown::0","time":{"start":1753894248249,"stop":1753894250602,"duration":2353},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_register"},{"name":"subSuite","value":"TestRegister"},{"name":"host","value":"MSI"},{"name":"thread","value":"2872-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_register"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2a3ef5ed5d411202","status":"passed","time":{"start":1753893942761,"stop":1753893945443,"duration":2682}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"b4845c91f9c43da6","reportUrl":"http://localhost:8080/job/TutorialsNinja/8/allure/#testresult/b4845c91f9c43da6","status":"passed","time":{"start":1753893942761,"stop":1753893945443,"duration":2682}}]},"tags":[]},"source":"326a0eb2c2841f81.json","parameterValues":[]}